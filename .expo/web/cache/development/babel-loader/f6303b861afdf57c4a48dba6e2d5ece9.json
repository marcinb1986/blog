{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nvar initialLoggedInState = {\n  loggedIn: false\n};\nvar loggedInSlice = createSlice({\n  name: \"loggedIn\",\n  initialState: initialLoggedInState,\n  reducers: {\n    withLogIn: function withLogIn(state) {\n      state.loggedIn = true;\n    },\n    withoutLogIn: function withoutLogIn(state) {\n      state.loggedIn = false;\n    }\n  }\n});\nvar initialLoggedOutState = {\n  loggedIn: true\n};\nvar logOutSlice = createSlice({\n  name: \"logOut\",\n  initialState: initialLoggedOutState,\n  reducers: {\n    logOut: function logOut(state) {\n      state.loggedIn = false;\n    }\n  }\n});\nexport var loggedInActions = loggedInSlice.actions;\nexport var logOutAction = logOutSlice.actions;\nexport var store = configureStore({\n  reducer: {\n    loggedIn: loggedInSlice.reducer,\n    logOut: logOutSlice.reducer\n  }\n});","map":{"version":3,"sources":["C:/Users/marci/OneDrive/Pulpit/moja_apka/blog/src/store/store.tsx"],"names":["createSlice","configureStore","initialLoggedInState","loggedIn","loggedInSlice","name","initialState","reducers","withLogIn","state","withoutLogIn","initialLoggedOutState","logOutSlice","logOut","loggedInActions","actions","logOutAction","store","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,IAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE;AADiB,CAA7B;AAIA,IAAMC,aAAa,GAAGJ,WAAW,CAAC;AAChCK,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAEJ,oBAFkB;AAGhCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,qBACEC,KADF,EACS;AACfA,MAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACD,KAHO;AAIRO,IAAAA,YAJQ,wBAIKD,KAJL,EAIY;AAClBA,MAAAA,KAAK,CAACN,QAAN,GAAiB,KAAjB;AACD;AANO;AAHsB,CAAD,CAAjC;AAaA,IAAMQ,qBAAqB,GAAG;AAC5BR,EAAAA,QAAQ,EAAE;AADkB,CAA9B;AAIA,IAAMS,WAAW,GAAGZ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEK,qBAFgB;AAG9BJ,EAAAA,QAAQ,EAAE;AACRM,IAAAA,MADQ,kBACDJ,KADC,EACM;AACZA,MAAAA,KAAK,CAACN,QAAN,GAAiB,KAAjB;AACD;AAHO;AAHoB,CAAD,CAA/B;AAmCA,OAAO,IAAMW,eAAe,GAAGV,aAAa,CAACW,OAAtC;AACP,OAAO,IAAMC,YAAY,GAAGJ,WAAW,CAACG,OAAjC;AAEP,OAAO,IAAME,KAAK,GAAGhB,cAAc,CAAC;AAClCiB,EAAAA,OAAO,EAAE;AAAEf,IAAAA,QAAQ,EAAEC,aAAa,CAACc,OAA1B;AAAmCL,IAAAA,MAAM,EAAED,WAAW,CAACM;AAAvD;AADyB,CAAD,CAA5B","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialLoggedInState = {\r\n  loggedIn: false,\r\n};\r\n\r\nconst loggedInSlice = createSlice({\r\n  name: \"loggedIn\",\r\n  initialState: initialLoggedInState,\r\n  reducers: {\r\n    withLogIn(state) {\r\n      state.loggedIn = true;\r\n    },\r\n    withoutLogIn(state) {\r\n      state.loggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialLoggedOutState = {\r\n  loggedIn: true,\r\n};\r\n\r\nconst logOutSlice = createSlice({\r\n  name: \"logOut\",\r\n  initialState: initialLoggedOutState,\r\n  reducers: {\r\n    logOut(state) {\r\n      state.loggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\n// const loginReducer = (\r\n//   state = initialState,\r\n//   action: PayloadAction<boolean>\r\n// ) => {\r\n//   if (action.type === \"withLogIn\") {\r\n//     return {\r\n//       loggedIn: true,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"withoutLogIn\") {\r\n//     return {\r\n//       loggedIn: false,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"logout\") {\r\n//     return {\r\n//       loggedIn: false,\r\n//     };\r\n//   } else {\r\n//     return state;\r\n//   }\r\n// };\r\n\r\nexport const loggedInActions = loggedInSlice.actions;\r\nexport const logOutAction = logOutSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: { loggedIn: loggedInSlice.reducer, logOut: logOutSlice.reducer },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"]},"metadata":{},"sourceType":"module"}